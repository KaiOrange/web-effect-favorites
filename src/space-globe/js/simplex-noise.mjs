/* esm.sh - simplex-noise@4.0.3 */
var S1=Math.sqrt(3),h1=Math.sqrt(5),D1=.5*(S1-1),r1=(3-S1)/6,M1=1/3,Y=1/6,N1=(h1-1)/4,y=(5-h1)/20,P=q=>Math.floor(q)|0,b1=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]),A1=new Float64Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),i1=new Float64Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);function T1(q=Math.random){let t=G1(q),i=new Float64Array(t).map(a=>b1[a%12*2]),n=new Float64Array(t).map(a=>b1[a%12*2+1]);return function(f,m){let G=0,b=0,S=0,h=(f+m)*D1,z=P(f+h),A=P(m+h),D=(z+A)*r1,Q=z-D,R=A-D,u=f-Q,F=m-R,M,N;u>F?(M=1,N=0):(M=0,N=1);let Z=u-M+r1,p=F-N+r1,d=u-1+2*r1,g=F-1+2*r1,j=z&255,k=A&255,s=.5-u*u-F*F;if(s>=0){let o=j+t[k],w=i[o],x=n[o];s*=s,G=s*s*(w*u+x*F)}let c=.5-Z*Z-p*p;if(c>=0){let o=j+M+t[k+N],w=i[o],x=n[o];c*=c,b=c*c*(w*Z+x*p)}let e=.5-d*d-g*g;if(e>=0){let o=j+1+t[k+1],w=i[o],x=n[o];e*=e,S=e*e*(w*d+x*g)}return 70*(G+b+S)}}function X1(q=Math.random){let t=G1(q),i=new Float64Array(t).map(f=>A1[f%12*3]),n=new Float64Array(t).map(f=>A1[f%12*3+1]),a=new Float64Array(t).map(f=>A1[f%12*3+2]);return function(m,G,b){let S,h,z,A,D=(m+G+b)*M1,Q=P(m+D),R=P(G+D),u=P(b+D),F=(Q+R+u)*Y,M=Q-F,N=R-F,Z=u-F,p=m-M,d=G-N,g=b-Z,j,k,s,c,e,o;p>=d?d>=g?(j=1,k=0,s=0,c=1,e=1,o=0):p>=g?(j=1,k=0,s=0,c=1,e=0,o=1):(j=0,k=0,s=1,c=1,e=0,o=1):d<g?(j=0,k=0,s=1,c=0,e=1,o=1):p<g?(j=0,k=1,s=0,c=0,e=1,o=1):(j=0,k=1,s=0,c=1,e=1,o=0);let w=p-j+Y,x=d-k+Y,T=g-s+Y,X=p-c+2*Y,I=d-e+2*Y,J=g-o+2*Y,K=p-1+3*Y,L=d-1+3*Y,O=g-1+3*Y,C=Q&255,E=R&255,H=u&255,U=.6-p*p-d*d-g*g;if(U<0)S=0;else{let l=C+t[E+t[H]];U*=U,S=U*U*(i[l]*p+n[l]*d+a[l]*g)}let W=.6-w*w-x*x-T*T;if(W<0)h=0;else{let l=C+j+t[E+k+t[H+s]];W*=W,h=W*W*(i[l]*w+n[l]*x+a[l]*T)}let v=.6-X*X-I*I-J*J;if(v<0)z=0;else{let l=C+c+t[E+e+t[H+o]];v*=v,z=v*v*(i[l]*X+n[l]*I+a[l]*J)}let B=.6-K*K-L*L-O*O;if(B<0)A=0;else{let l=C+1+t[E+1+t[H+1]];B*=B,A=B*B*(i[l]*K+n[l]*L+a[l]*O)}return 32*(S+h+z+A)}}function Y1(q=Math.random){let t=G1(q),i=new Float64Array(t).map(m=>i1[m%32*4]),n=new Float64Array(t).map(m=>i1[m%32*4+1]),a=new Float64Array(t).map(m=>i1[m%32*4+2]),f=new Float64Array(t).map(m=>i1[m%32*4+3]);return function(G,b,S,h){let z,A,D,Q,R,u=(G+b+S+h)*N1,F=P(G+u),M=P(b+u),N=P(S+u),Z=P(h+u),p=(F+M+N+Z)*y,d=F-p,g=M-p,j=N-p,k=Z-p,s=G-d,c=b-g,e=S-j,o=h-k,w=0,x=0,T=0,X=0;s>c?w++:x++,s>e?w++:T++,s>o?w++:X++,c>e?x++:T++,c>o?x++:X++,e>o?T++:X++;let I=w>=3?1:0,J=x>=3?1:0,K=T>=3?1:0,L=X>=3?1:0,O=w>=2?1:0,C=x>=2?1:0,E=T>=2?1:0,H=X>=2?1:0,U=w>=1?1:0,W=x>=1?1:0,v=T>=1?1:0,B=X>=1?1:0,l=s-I+y,l1=c-J+y,a1=e-K+y,f1=o-L+y,p1=s-O+2*y,y1=c-C+2*y,m1=e-E+2*y,g1=o-H+2*y,w1=s-U+3*y,x1=c-W+3*y,u1=e-v+3*y,d1=o-B+3*y,F1=s-1+4*y,j1=c-1+4*y,k1=e-1+4*y,z1=o-1+4*y,V=F&255,_=M&255,$=N&255,t1=Z&255,n1=.6-s*s-c*c-e*e-o*o;if(n1<0)z=0;else{let r=V+t[_+t[$+t[t1]]];n1*=n1,z=n1*n1*(i[r]*s+n[r]*c+a[r]*e+f[r]*o)}let o1=.6-l*l-l1*l1-a1*a1-f1*f1;if(o1<0)A=0;else{let r=V+I+t[_+J+t[$+K+t[t1+L]]];o1*=o1,A=o1*o1*(i[r]*l+n[r]*l1+a[r]*a1+f[r]*f1)}let s1=.6-p1*p1-y1*y1-m1*m1-g1*g1;if(s1<0)D=0;else{let r=V+O+t[_+C+t[$+E+t[t1+H]]];s1*=s1,D=s1*s1*(i[r]*p1+n[r]*y1+a[r]*m1+f[r]*g1)}let c1=.6-w1*w1-x1*x1-u1*u1-d1*d1;if(c1<0)Q=0;else{let r=V+U+t[_+W+t[$+v+t[t1+B]]];c1*=c1,Q=c1*c1*(i[r]*w1+n[r]*x1+a[r]*u1+f[r]*d1)}let e1=.6-F1*F1-j1*j1-k1*k1-z1*z1;if(e1<0)R=0;else{let r=V+1+t[_+1+t[$+1+t[t1+1]]];e1*=e1,R=e1*e1*(i[r]*F1+n[r]*j1+a[r]*k1+f[r]*z1)}return 27*(z+A+D+Q+R)}}function G1(q){let i=new Uint8Array(512);for(let n=0;n<512/2;n++)i[n]=n;for(let n=0;n<512/2-1;n++){let a=n+~~(q()*(256-n)),f=i[n];i[n]=i[a],i[a]=f}for(let n=256;n<512;n++)i[n]=i[n-256];return i}export{G1 as buildPermutationTable,T1 as createNoise2D,X1 as createNoise3D,Y1 as createNoise4D};
//# sourceMappingURL=simplex-noise.mjs.map